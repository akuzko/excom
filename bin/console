#!/usr/bin/env ruby

require "bundler/setup"
require "excom"

class Show < Excom::Service
  use :execution_cache

  attributes :foo

  def execute!
    sleep(1)
    {foo: foo}
  end
end

class MyErrors < Hash
  def add(key, message)
    (self[key] ||= []) << message
  end
end

class Policies < Excom::Service
  use :policies

  attributes :foo, :bar, :threshold

  deny_with :unauthorized do
    def save?
      foo != 6
    end
  end

  deny_with :unprocessable_entity do
    def save?
      foo != 7
    end

    def bar?
      bar && bar > threshold
    end
  end
end

class Save < Excom::Service
  use :status
  use :validation, errors_class: MyErrors
  use :assertions

  attributes :foo, :bar

  def foo
    super || 6
  end

  def execute!
    result { foo * 2 }
    assert { foo > bar }
  end

  private def validate
    errors.add(:foo, 'invalid') unless policies.can?(:save)
    errors.add(:bar, 'too small') unless policies.can?(:bar)
  end

  private def policies
    @policies ||= Policies.new(foo: foo, bar: bar, threshold: 0)
  end
end

require "pry"
Pry.start
